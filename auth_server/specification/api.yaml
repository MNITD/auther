openapi: 3.0.2
info:
  title: Authorization server API specification
  version: '1.0'

tags:
  - name: authorization
    x-displayName: Authorization
    description: |
      Resource owner authorization.
  - name: token
    x-displayName: Token
    description: |
      Token manipulation
  - name: other
    x-displayName: Other
    description: |
      Other resources

paths:
  /authorize:
    get:
      operationId: getAuthorizationForm
      tags:
        - authorization
      description: Used to get the login form, genereted for a particular client specified in the query parameters.
      parameters:
        - name: response_type
          in: query
          required: true
          description: Defines what response is expected by the client. The only available value is 'code'.
          schema:
            type: string
            example: 'code'
        - name: client_id
          in: query
          required: true
          description: The ID of a client issued after client registrations.
          schema:
            type: string
            example: 'sample-app'
        - name: redirect_uri
          in: query
          required: true
          description: The URL-encoded one of absolute uri predefined in the authorization server during client registration. Required for 'code' response_type.
          schema:
            type: string
            example: 'https%3A%2F%2Fsample.com%2F'
        - name: state
          in: query
          description: Random string generated by client to prevent CSRF attack.
          schema:
            type: string
            example: '6348d5df-02cf-4ddd-9586-407ea9890c0c'
        - name: code_challenge
          in: query
          required: true
          description: Code created via secret code transformation by the client.
          schema:
            type: string
            example: 'E9Melhoa2OwvFrEMTJguCHaoeK1t8URWbuGJSstw-cM'
        - name: code_challenge_method
          in: query
          required: true
          description: A method used to make a transformation of secret code.
          schema:
            type: string
            example: 'S256'
      responses:
        '200':
          description: Form successfully created
        '400':
          description: Invalid request
    post:
      operationId: authenticateUser
      tags:
        - authorization
      description: Used to authenticate the resource owner, and retrieve authorization grant.
      parameters:
        - name: response_type
          in: query
          required: true
          description: Defines what response is expected by the client. The only available value is 'code'.
          schema:
            type: string
            example: 'code'
        - name: client_id
          in: query
          required: true
          description: The ID of a client issued after client registrations.
          schema:
            type: string
            example: 'sample-app'
        - name: redirect_uri
          in: query
          required: true
          description: The URL-encoded one of absolute uri predefined in the authorization server during client registration. Required for 'code' response_type.
          schema:
            type: string
            example: 'https%3A%2F%2Fsample.com%2F'
        - name: state
          in: query
          description: Random string generated by client to prevent CSRF attack.
          schema:
            type: string
            example: '6348d5df-02cf-4ddd-9586-407ea9890c0c'
        - name: code_challenge
          in: query
          required: true
          description: Code created via secret code transformation by the client.
          schema:
            type: string
            example: 'E9Melhoa2OwvFrEMTJguCHaoeK1t8URWbuGJSstw-cM'
        - name: code_challenge_method
          in: query
          required: true
          description: A method used to make a transformation of secret code.
          schema:
            type: string
            example: 'S256'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: The resource owner username, his human-readable identifier in the system
                  example: testuser
                password:
                  type: string
                  description: The resource owner secret, that will be hashed and compared with stored one in the system for identity verification
                  example: superSECRETpassword12345
              required:
                - username
                - password

      responses:
        '302':
          description: User is authenticated, and redirected to the client redirect uri with authorization code
          headers:
            Location:
              description: URI predefined during client registration and specified in request parameters
              schema:
                type: string
                format: uri
                example: 'https://sample.com/?code=AUTHORIZATION_CODE&state=STATE'
        '400':
          description: Invalid request

  /register:
    get:
      operationId: getRegistrationForm
      tags:
        - authorization
      description: Used to get the registration form, genereted for a particular client specified in the query parameters.
      parameters:
        - name: response_type
          in: query
          required: true
          description: Defines what response is expected by the client. The only available value is 'code'.
          schema:
            type: string
            example: 'code'
        - name: client_id
          in: query
          required: true
          description: The ID of a client issued after client registrations.
          schema:
            type: string
            example: 'sample-app'
        - name: redirect_uri
          in: query
          required: true
          description: The URL-encoded one of absolute uri predefined in the authorization server during client registration. Required for 'code' response_type.
          schema:
            type: string
            example: 'https%3A%2F%2Fsample.com%2F'
        - name: state
          in: query
          description: Random string generated by client to prevent CSRF attack.
          schema:
            type: string
            example: '6348d5df-02cf-4ddd-9586-407ea9890c0c'
        - name: code_challenge
          in: query
          required: true
          description: Code created via secret code transformation by the client.
          schema:
            type: string
            example: 'E9Melhoa2OwvFrEMTJguCHaoeK1t8URWbuGJSstw-cM'
        - name: code_challenge_method
          in: query
          required: true
          description: A method used to make a transformation of secret code.
          schema:
            type: string
            example: 'S256'
      responses:
        '200':
          description: Form successfully created
        '400':
          description: Invalid request
    post:
      operationId: registerUser
      tags:
        - authorization
      description: Used to register the resource owner, and retrieve authorization grant.
      parameters:
        - name: response_type
          in: query
          required: true
          description: Defines what response is expected by the client. The only available value is 'code'.
          schema:
            type: string
            example: 'code'
        - name: client_id
          in: query
          required: true
          description: The ID of a client issued after client registrations.
          schema:
            type: string
            example: 'sample-app'
        - name: redirect_uri
          in: query
          required: true
          description: The URL-encoded one of absolute uri predefined in the authorization server during client registration. Required for 'code' response_type.
          schema:
            type: string
            example: 'https%3A%2F%2Fsample.com%2F'
        - name: state
          in: query
          description: Random string generated by client to prevent CSRF attack.
          schema:
            type: string
            example: '6348d5df-02cf-4ddd-9586-407ea9890c0c'
        - name: code_challenge
          in: query
          required: true
          description: Code created via secret code transformation by the client.
          schema:
            type: string
            example: 'E9Melhoa2OwvFrEMTJguCHaoeK1t8URWbuGJSstw-cM'
        - name: code_challenge_method
          in: query
          required: true
          description: A method used to make a transformation of secret code.
          schema:
            type: string
            example: 'S256'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: The resource owner username, his human-readable identifier in the system
                  example: testuser
                password:
                  type: string
                  description: The resource owner secret, that will be hashed and compared with stored one in the system for identity verification
                  example: superSECRETpassword12345
              required:
                - username
                - password

      responses:
        '302':
          description: User is registered, and redirected to the client redirect uri with authorization code
          headers:
            Location:
              description: URI predefined during client registration and specified in request parameters
              schema:
                type: string
                format: uri
                example: 'https://sample.com/?code=AUTHORIZATION_CODE&state=STATE'
        '400':
          description: Invalid request

  /token:
    post:
      operationId: getToken
      tags:
        - token
      description: Used by client to obtain or refresh token pair (access and refresh tokens).
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/AuthorizationCodeRequest'
                - $ref: '#/components/schemas/ClientCredentialsRequest'
                - $ref: '#/components/schemas/RefreshTokenRequest'

      responses:
        '200':
          description: User is registered, and redirected to the client redirect uri
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    description: The short-lived token used for accessing protected resources
                    example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c'
                  expired_at:
                    type: number
                    description: The date when access token will be expired
                    example: 1589770011680
                  refresh_token:
                    type: string
                    description: The long-lived token used to retrieve new pair of access and refresh tokens
                    example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c'
                  refresh_expired_at:
                    type: number
                    description: The date when refresh token will be expired
                    example: 1589770051680
                  token_type:
                    type: string
                    description: A type of access and refresh tokens
                    example: bearer
        '400':
          description: Invalid request
  /revoke:
    post:
      operationId: revokeToken
      tags:
        - token
      description: Used by the client to revoke the refresh token and in such way end resource owner session.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: The long-lived token used to retrieve new pair of access and refresh tokens
                  example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c'
              required:
                - token
      responses:
        '200':
          description: Token is successfully revoked
        '400':
          description: Invalid request

  /.well-known/jwks.json:
    get:
      operationId: getJWKS
      tags:
        - other
      description: Used by the resource server to get public keys and verify access token.
      responses:
        '200':
          description: Public keys used to verify access token presented in the form of JSON Web Key Set (JWKS)
          content:
            application/json:
              schema:
                type: object
                properties:
                  keys:
                    type: array
                    items:
                      type: object
                      properties:
                        alg:
                          type: string
                          example: 'RS256'
                        kty:
                          type: string
                          example: 'RSA'
                        use:
                          type: string
                          example: 'sig'
                        n:
                          type: string
                        e:
                          type: string
                          example: 'AQAB'
                        kid:
                          type: string
                          example: 'RkI5MjI5OUY5ODc1N0Q4QzM0OUYzNkVGMTJDOUEzQkFCOTU3NjE2Rg'
                        x5t:
                          type: array
                          items:
                            type: string
components:
  schemas:
    AuthorizationCodeRequest:
      type: object
      properties:
        grant_type:
          type: string
          description: The grant type of the authorization flow.
          enum: [authorization_code] # device_code, client_credentials, refresh_token
        code:
          type: string
          description: The authorization code retrieved during resource owner authentication
          example: '1ec0c7f1-259f-4606-b0e5-b94c7db71e9b'
        redirect_uri:
          type: string
          description: |
            The URL-encoded one of absolute uri predefined in the authorization server during client registration.
            Must be used the same value as in authorization code obtaining step.
          example: 'https%3A%2F%2Fsample.com%2F'
        client_id:
          type: string
          description: The ID of a client issued after client registrations.
          example: 'sample-app'
        client_secret:
          type: string
          description: The secret key of client issued during client registration (for confidential clients).
          example: '0aade03e-c0fc-4c94-9efa-386ec2acf5a4'
        code_verifier:
          type: string
          description: Secret value generated by client before requesting authorization code
          example: 'dBjftJeZ4CVP-mB92K27uhbUJU1p1r_wW1gFWFOEjXk'
      required:
        - grant_type
        - code
        - redirect_uri
        - client_id
        - code_verifier

    ClientCredentialsRequest:
      type: object
      properties:
        grant_type:
          type: string
          description: The grant type of the authorization flow.
          enum: [client_credentials]
        client_id:
          type: string
          description: The ID of a client issued after client registrations.
          example: 'sample-app'
        client_secret:
          type: string
          description: The secret key of client issued during client registration.
          example: '0aade03e-c0fc-4c94-9efa-386ec2acf5a4'
      required:
        - grant_type
        - client_id
        - client_secret

    RefreshTokenRequest:
      type: object
      properties:
        grant_type:
          type: string
          description: The grant type of the authorization flow.
          enum: [refresh_token]
        refresh_token:
          type: string
          description: The refresh token issued during obtaining authorization token
          example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c'
        client_id:
          type: string
          description: The ID of a client issued after client registrations.
          example: 'sample-app'
        client_secret:
          type: string
          description: The secret key of client issued during client registration (for confidential clients).
          example: '0aade03e-c0fc-4c94-9efa-386ec2acf5a4'
      required:
        - grant_type
        - client_id
        - refresh_token
